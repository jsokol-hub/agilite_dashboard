# Этап 1: "Строитель" (Builder) - Установка зависимостей
# Используем конкретную версию Python для предсказуемости
FROM python:3.11.9-slim as builder

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем только файл с зависимостями, чтобы использовать кэш Docker
COPY requirements.txt .

# Устанавливаем зависимости в локальную директорию пользователя, а не глобально
# Это безопаснее и является хорошей практикой
RUN pip install --user --no-cache-dir -r requirements.txt

# ---

# Этап 2: Финальный образ
# Начинаем с такого же чистого образа Python
FROM python:3.11.9-slim

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем зависимости, установленные на этапе "строителя"
COPY --from=builder /root/.local /root/.local

# Копируем весь код нашего приложения
COPY . .

# Добавляем директорию с исполняемыми файлами пакетов (включая gunicorn) в системный PATH
# Это обязательно, так как мы использовали --user при установке
ENV PATH=/root/.local/bin:$PATH

# Открываем порт 80, который будет слушать Gunicorn. CapRover ожидает этого.
EXPOSE 80

# Запускаем приложение с помощью Gunicorn
# Это производственный стандарт для запуска веб-приложений на Python
CMD ["gunicorn", "--bind", "0.0.0.0:80", "app:server"] 